# Generated by Django 2.0.6 on 2019-05-06 06:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_time', models.DateTimeField(auto_now_add=True)),
                ('period', models.IntegerField(default=3600)),
                ('price', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('instituition', models.CharField(blank=True, max_length=255)),
                ('domain', models.CharField(blank=True, max_length=255)),
                ('citation_num', models.IntegerField(blank=True, default=0)),
                ('article_num', models.IntegerField(blank=True, default=0)),
                ('h_index', models.IntegerField(blank=True, default=0)),
                ('g_index', models.IntegerField(blank=True, default=0)),
                ('avator', models.ImageField(blank=True, upload_to='SAcore/static/author_avator')),
            ],
        ),
        migrations.CreateModel(
            name='Bidding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(default=0)),
                ('au', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SAcore.Author')),
            ],
        ),
        migrations.CreateModel(
            name='publish_apply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('intro', models.TextField()),
                ('url', models.TextField(blank=True)),
                ('price', models.IntegerField(default=0)),
                ('Type', models.CharField(choices=[('P1', 'Paper'), ('P2', 'Patent'), ('P3', 'Project')], max_length=2)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(blank=True, upload_to='SAcore/static/files')),
                ('au', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicant', to='SAcore.Author')),
                ('authors', models.ManyToManyField(blank=True, related_name='authors', to='SAcore.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('intro', models.TextField(blank=True)),
                ('url', models.TextField(blank=True)),
                ('price', models.IntegerField(default=0)),
                ('Type', models.CharField(choices=[('P1', 'Paper'), ('P2', 'Patent'), ('P3', 'Project')], max_length=2)),
                ('publisher', models.CharField(blank=True, max_length=255)),
                ('publish_date', models.CharField(blank=True, max_length=255)),
                ('citation_nums', models.IntegerField(blank=True, default=0)),
                ('agency', models.CharField(blank=True, max_length=255)),
                ('patent_number', models.TextField(blank=True)),
                ('patent_applicant_number', models.TextField(blank=True)),
                ('file', models.FileField(blank=True, upload_to='SAcore/static/files')),
                ('authors', models.ManyToManyField(blank=True, to='SAcore.Author')),
                ('owner', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='SAcore.Author')),
            ],
        ),
        migrations.CreateModel(
            name='U2E_apply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_created=True)),
                ('name', models.CharField(default=' ', max_length=255)),
                ('instituition', models.CharField(blank=True, max_length=255)),
                ('domain', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(max_length=20)),
                ('Type', models.CharField(choices=[('U', 'User'), ('E', 'Expert')], max_length=1)),
                ('avator', models.ImageField(blank=True, upload_to='SAcore/static/user_avator')),
                ('balance', models.IntegerField(default=0)),
                ('buyed_list', models.ManyToManyField(blank=True, related_name='buyed_list', to='SAcore.Resource')),
                ('followed_list', models.ManyToManyField(blank=True, to='SAcore.Author')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('star_list', models.ManyToManyField(blank=True, related_name='star_list', to='SAcore.Resource')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='usertoken',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='u2e_apply',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='author',
            name='bind',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='author',
            name='coworkers',
            field=models.ManyToManyField(blank=True, related_name='_author_coworkers_+', to='SAcore.Author'),
        ),
        migrations.AddField(
            model_name='author',
            name='resources',
            field=models.ManyToManyField(blank=True, to='SAcore.Resource'),
        ),
        migrations.AddField(
            model_name='auction',
            name='candidate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate', to='SAcore.Author'),
        ),
        migrations.AddField(
            model_name='auction',
            name='participants',
            field=models.ManyToManyField(related_name='participants', to='SAcore.Author'),
        ),
        migrations.AddField(
            model_name='auction',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SAcore.Resource'),
        ),
        migrations.AddField(
            model_name='auction',
            name='start_au',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_au', to='SAcore.Author'),
        ),
    ]
